@startuml
!include ../c4/C4_Container.puml

'skinparam linetype ortho
skinparam ArrowThickness 3
skinparam Nodesep 92
skinparam Ranksep 128

LAYOUT_WITH_LEGEND()

AddRelTag("use", $textColor="gray", $lineColor="lightgray", $legendText="Use")
AddRelTag("extend", $textColor="purple", $lineColor="purple", $legendText="Extend")
AddRelTag("push", $textColor="blue", $lineColor="blue", $legendText="Push")
AddRelTag("pull", $textColor="green", $lineColor="green", $legendText="Pull")

' TODO
' ?????? e.g. sources -> javadoc for documentation (push/pull)
' * use build-infra
' release pull * to build distros
' release use gradle-promote
' release push distributions
' documentation-portal pull distributions
' documentation-portal push docs.gradle.org

System_Ext(ge, "Gradle Enterprise", "The tool of choice for the worldâ€™s most valuable global business and technology brands that compete on the delivery speed and quality of their code.")

System_Ext(ide, IDEs, "IntelliJ IDEA, Android Studio, VSCode etc...")

System_Boundary(gbt, "Gradle Build Tool") {

    Container_Boundary(cross, Cross Cutting) {

        Container(doc, Documentation,,"User manual, Javadoc, DSL references and documentation infrastructure")

        Container(release, Release coordination,,"Full distribution, dependencies platform, performance, soak/smoke tests")

        Container(build_infra, Build infrastructure,,"TODO")
    }

    Container(ge_integration, GE integration,,"TODO")
    Container(ide_integration, IDE integration,,"TODO")

    Container_Boundary(ext, Extensibility) {
        Container(extensibility, Extensibility,,"TODO")
        System_Ext(portal, Gradle Plugin Portal)
    }

    Container(utils, Utilities,,"Libraries with shared ownership.")

    Container(software_jvm, JVM Software,, "Building on the core and software platforms, this is a platform for developing software that runs on the JVM, whether that software is implemented using Java, Kotlin or some other JVM language.")

    Container(software, Software,, "Building on the core automation platform, this is a general purpose platform for automating software development. This includes work such as compiling, testing and documenting software, plus sharing that software via publishing and dependency management. This platform is agnostic to what kind of software is being developed. It might be Java or Kotlin libraries running on the JVM, Gradle plugins, Android or iOS applications, C++ libraries, and so on.")

    Container_Boundary(core, Core Automation) {
        Container(core_config, Core Configuration,,"TODO")
        Container(core_exec, Core Execution,,"TODO")
        Container(core_runtime, Core Runtime,,"????")
        Container(core_ux, Core UX,,"????")
    }
}

Container_Ext(kotlin, Kotlin,, "This platform allows software to be implemented in Kotlin and run in JVM, Javascript and native environments.")
Container_Ext(android, Android,, "This platform allows software to be developed for the Android ecosystem using various implementation languages.")
Container_Ext(nokee, Nokee,, "The Nokee project aims to allow software to be developed for several native environments, such as iOS or desktop machines, using various implementation languages, such as C++ or Swift.")
Container_Ext(custom, Custom,, "Teams and the community should be able to build their own platforms, that build on top of other platforms.")

Rel(build_infra, software_jvm,, $tags="extend")
Rel(release, build_infra,, $tags="use")

Rel(software,core,, $tags="extend")
Rel(software_jvm, software,, $tags="extend")
Rel(software_jvm, core,, $tags="extend")

Rel(core,ge_integration,, $tags="push")
Rel(software,ge_integration,, $tags="push")
Rel(software_jvm,ge_integration,, $tags="push")
Rel(ge,ge_integration,, $tags="pull")

Rel(ide,ide_integration,, $tags="use")
Rel(ide_integration,core,, $tags="use")
Rel(ide_integration,software,, $tags="use")
Rel(ide_integration,software_jvm,, $tags="use")

Rel(extensibility,core,, $tags="extend")
Rel(extensibility,software,, $tags="extend")
Rel(extensibility,software_jvm,, $tags="extend")

Rel(core,utils,, $tags="use")
Rel(software,utils,, $tags="use")
Rel(software_jvm,utils,, $tags="use")

Rel(kotlin,software_jvm,, $tags="extend")
Rel(android,kotlin,, $tags="extend")
Rel(android,software_jvm,, $tags="extend")
Rel(nokee,software,, $tags="extend")
Rel(custom,software_jvm,, $tags="extend")
Rel(custom,software,, $tags="extend")
Rel(custom,core,, $tags="extend")

SHOW_LEGEND()

@enduml
